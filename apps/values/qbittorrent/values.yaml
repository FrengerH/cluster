env:
  TZ: "Europe/Amsterdam"
  PUID: '1000'
  PGID: '1003'
  WEBUI_PORT: '8080'
  # TORRENTING_PORT: '8989'

# ingress:
#   enabled: true
#   className: traefik

#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-prod
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/service: qbittorrent
#     traefik.ingress.kubernetes.io/service-port: "8989"
#     traefik.ingress.kubernetes.io/router.tls: "true"

#   hosts:
#     - host: <path:qbittorrent-config#domain>
#       paths:
#         - path: /
#           pathType: ImplementationSpecific

#   tls:
#     - hosts:
#       - <path:qbittorrent-config#domain>
#       secretName: tls-qbittorrent-ingress

probes:
  liveness:
    enabled: true
    custom: true
    spec:
      httpGet:
        scheme: HTTP
        path: /
        port: 8080
      initialDelaySeconds: 240
      timeoutSeconds: 10
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
  readiness:
    enabled: true
    custom: true
    spec:
      httpGet:
        scheme: HTTP
        path: /
        port: 8080
      initialDelaySeconds: 30
      timeoutSeconds: 10
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 30
  startup:
    enabled: false
    custom: true
    spec:
      httpGet:
        scheme: HTTP
        path: /
        port: 8080
      initialDelaySeconds: 0
      timeoutSeconds: 1
      periodSeconds: 5
      failureThreshold: 30

service:
  main:
    # -- Enables or disables the service
    enabled: true

    # -- Set the service type
    type: ClusterIP

    # -- Specify the externalTrafficPolicy for the service. Options: Cluster, Local
    # -- [[ref](https://kubernetes.io/docs/tutorials/services/source-ip/)]
    externalTrafficPolicy:

    # -- Provide additional annotations which may be required.
    annotations: {}

    # -- Provide additional labels which may be required.
    labels: {}

    ports:
      http:
        # -- The port number
        port: 8080

        # -- Port protocol.
        protocol: HTTP

        # -- Specify the nodePort value for the LoadBalancer and NodePort service types.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
        nodePort: 8080

persistence:
  media:
    enabled: true
    existingClaim: media-pvc
  config:
    enabled: true
    storageClass: "longhorn"
    accessMode: ReadWriteOnce
    size: 10Gi
